version: "3"
services:
  # DBサーバ
  postgres:
    image: postgres:14.6
    volumes:
      - database-data:/var/lib/postgresql/data
    env_file:
      - .env
    healthcheck:
      test: "psql -U postgres"
      interval: 1s
      timeout: 3s
      retries: 10
    container_name: postgres

  # session storage コンテナ
  redis:
    image: redis
    volumes:
      - session-data:/data
    container_name: redis

  # S3
  localstack:
    image: localstack/localstack:3
    #ports:
    #  - "4566:4566"    # sam や awslocal 等CLIでホストから操作する場合はポートを開ける必要がある
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./files/init-localstack:/etc/localstack/init/ready.d
    environment:
      SERVICES: "s3"
      LOCALSTACK_HOST: localhost
      #EXTRA_CORS_ALLOWED_ORIGINS: http://localhost:8000
      AWS_REGION: ap-northeast-1
    container_name: localstack

  # server の runserver コンテナ
  server:
    build:
      context: ..
    volumes:
      - ./files/local.py:/opt/apps/server/src/project/settings/local.py
      - ../src:/opt/apps/server/src
    environment:
      TZ: "Asia/Tokyo"
      PYTHONUNBUFFERED: 1
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    command: [ "python", "src/manage.py", "runserver", "0.0.0.0:8000" ]
    container_name: server

  proxy:
    image: jwilder/nginx-proxy:1.4
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./files/proxy.conf:/etc/nginx/vhost.d/localhost_location_override
    environment:
      TRUST_DOWNSTREAM_PROXY: true
    depends_on:
      - server

# 名前付きボリュームの定義
volumes:
  database-data:
  session-data:
